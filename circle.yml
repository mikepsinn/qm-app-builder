# Customize the test machine
machine:
  ruby:
    version: 2.4.1
  java:
    version: oraclejdk8
  environment:
    _JAVA_OPTIONS: "-Xms512m -Xmx1024m" # Appears to solve "Your build has exceeded the memory limit of 4G on 1 container"
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'  # Did not solve "Your build has exceeded the memory limit of 4G on 1 container"

checkout:
  post:
    - git submodule sync --recursive
    - git submodule update --remote --recursive  # Should get the most recent commit of the branch specified in .gitmodules
    - chmod -R +x ./app/scripts
    - chmod +x -R ./app/hooks/*
    - cp -r app/android-licenses/. $ANDROID_HOME/licenses
    - chmod 777 -R $PWD

# Customize dependencies
dependencies:
  pre:
    - ruby -v
    - mkdir app/node_modules || true # must exist prior to override to cache
    - mkdir app/platforms || true # must exist prior to override to cache
    - mkdir app/plugins || true # must exist prior to override to cache
    - mkdir app/src/lib || true # must exist prior to override to cache

  post:
    - cd app && ionic info

  override:
    - gem install fastlane # Don't use sudo or it uses old ruby version
    - sudo apt-get update; sudo apt-get install tree imagemagick
    - cd app && npm install -g gulp cordova@7.0.0 ionic@2.2.3 bower
    - cd app && npm install
    #- cd app && gulp prepareRepositoryForAndroidWithoutCleaning
    - cd app && gulp prepareRepositoryForAndroid

  cache_directories:
    - /home/ubuntu/nvm/versions/node/6.10.3/bin
    - /home/ubuntu/nvm/versions/node/6.10.3/lib/node_modules
    - app/node_modules   # Probably don't want to cache node_modules so we catch problematic dependency changes
    - app/platforms
    - app/plugins
    - app/src/lib
    - /opt/circleci/nodejs/v4.2.6/bin
    - /opt/circleci/nodejs/v4.2.6/lib/node_modules

test:
  override:
    - echo "This line is to prevent automatic test detection."

general:
  branches:
    ignore:
      - gh-pages # list of branches to ignore
      - /release\/.*/ # or ignore regexes
  artifacts:
    #- "./app/build"
    #- "./app/dropbox"

deployment:
  apps:
    branch: /apps\/.*/
    commands:
      - cd app && gulp buildChromeExtension # Do this first so non-Android apps will be built
      - cd app && gulp buildAndroidApp
      - cd app && gulp verify-and-post-notify-collaborators-android
  staging:
    branch: develop
    commands:
      - cd app && ./scripts/circleci_build_android_apps_and_chrome_extensions.sh
      - cd app && bash buddybuild_postbuild.sh
  production:
    branch: master
    commands:
      - cd app && ./scripts/circleci_build_android_apps_and_chrome_extensions.sh
      #- cd app && gulp ionicUploadProductionForAllApps